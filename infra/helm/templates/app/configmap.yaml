apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helm.fullname" . }}-app-config
  labels:
    app.kubernetes.io/name: {{ include "helm.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: configuration
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: {{ include "helm.name" . }}-platform

    app.kubernetes.io/layer: backend
    app.kubernetes.io/tier: configuration
    environment: {{ .Values.global.environment | default "development" | lower }}
data:
  # SERVICE CONFIGURATION
  SERVICE_NAME: "{{ include "helm.name" . }}"
  SERVICE_VERSION: "{{ .Chart.AppVersion }}"

  # ENVIRONMENT CONFIGURATION.
  ENVIRONMENT: "{{ .Values.global.environment | default "development" | upper }}"

  # HTTP SERVER CONFIGURATION
  SERVER_API_HOST: "{{ .Values.config.server.apiHost | default "0.0.0.0:8080" }}"
  SERVER_READ_TIMEOUT: "{{ .Values.config.server.readTimeout | default "30s" }}"
  SERVER_IDLE_TIMEOUT: "{{ .Values.config.server.idleTimeout | default "120s" }}"
  SERVER_WRITE_TIMEOUT: "{{ .Values.config.server.writeTimeout | default "30s" }}"
  SERVER_SHUTDOWN_TIMEOUT: "{{ .Values.config.server.shutdownTimeout | default "30s" }}"

  # DATABASE CONNECTION CONFIGURATION
  DB_TLS: "{{ .Values.config.db.tls | default "require" }}"
  DB_NAME: "{{ .Values.config.db.name | default "k8s-demo" }}"
  DB_SCHEME: "{{ .Values.config.db.scheme | default "postgres" }}"
  DB_HOST: "{{ printf "%s-%s" .Release.Name .Values.config.db.host }}"
  DB_MAX_IDLE_CONN: "{{ .Values.config.db.maxIdleConn | default "10" }}"
  DB_MAX_OPEN_CONN: "{{ .Values.config.db.maxOpenConn | default "25" }}"

  # OBSERVABILITY AND TRACING CONFIGURATION
  JAEGER_ENDPOINT: "http://{{ include "helm.fullname" . }}-jaeger-svc:4318"