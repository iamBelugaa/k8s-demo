apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-grafana
  labels:
    app.kubernetes.io/component: grafana
    app.kubernetes.io/name: {{ include "helm.name" . }}
    environment: {{ .Values.global.environment | default "development" | lower }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: {{ include "helm.name" . }}
      environment: {{ .Values.global.environment | default "development" | lower }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: grafana
        app.kubernetes.io/name: {{ include "helm.name" . }}
        environment: {{ .Values.global.environment | default "development" | lower }}
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsNonRoot: true
      containers:
      - name: grafana
        image: {{ .Values.observability.grafana.image | default "grafana/grafana:12.0.2" }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
          runAsUser: 472
          runAsGroup: 472
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.observability.grafana.adminPassword | default "admin123" }}
        - name: GF_PATHS_DATA
          value: "/var/lib/grafana"
        - name: GF_PATHS_LOGS
          value: "/var/log/grafana"
        resources:
          requests:
            memory: {{ .Values.observability.grafana.resources.requests.memory | default "256Mi" }}
            cpu: {{ .Values.observability.grafana.resources.requests.cpu | default "250m" }}
          limits:
            memory: {{ .Values.observability.grafana.resources.limits.memory | default "512Mi" }}
            cpu: {{ .Values.observability.grafana.resources.limits.cpu | default "500m" }}
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 5
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-logs
          mountPath: /var/log/grafana
        - name: tmp
          mountPath: /tmp
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: {{ include "helm.fullname" . }}-grafana-pvc
      - name: grafana-logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: {{ include "helm.fullname" . }}-grafana-config
