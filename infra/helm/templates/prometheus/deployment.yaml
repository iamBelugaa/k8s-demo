apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-prometheus
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/name: {{ include "helm.name" . }}
    environment: {{ .Values.global.environment | default "development" | lower }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/name: {{ include "helm.name" . }}
      environment: {{ .Values.global.environment | default "development" | lower }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: prometheus
        app.kubernetes.io/name: {{ include "helm.name" . }}
        environment: {{ .Values.global.environment | default "development" | lower }}
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
      containers:
        - name: prometheus
          image: {{ .Values.observability.prometheus.image | default "prom/prometheus:v3.4.2" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--storage.tsdb.retention.time={{ .Values.observability.prometheus.retention | default "15d" }}'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--web.external-url=http://prometheus-demo.com'
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: {{ .Values.observability.prometheus.resources.limits.cpu | default "500m" }}
              memory: {{ .Values.observability.prometheus.resources.limits.memory | default "1Gi" }}
            requests:
              cpu: {{ .Values.observability.prometheus.resources.requests.cpu | default "250m" }}
              memory: {{ .Values.observability.prometheus.resources.requests.memory | default "512Mi" }}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/
              readOnly: true
            - name: storage
              mountPath: /prometheus/
      volumes:
        - name: config
          configMap:
            name: {{ include "helm.fullname" . }}-prometheus-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "helm.fullname" . }}-prometheus-pvc